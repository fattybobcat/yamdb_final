name: yamdb

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install -r requirements.txt
    - name: Lint with flake8
      run: flake8 --exclude tests/
      
    - name: Test with pytest
      run: pytest

  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: fattybobcat/yamdb_final:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: create .env file
        run: |
          touch .env
          echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
          echo DB_NAME=${{ secrets.DB_NAME }} >> .env
          echo POSTGRES_USER=${{ secrets.DEV_PASSWORD }} >> .env
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          echo DB_HOST=${{ secrets.DB_HOST }} >> .env
          echo DB_PORT=${{ secrets.DB_PORT }} >> .env
          echo MAIL_SENDER=${{ secrets.MAIL_SENDER }} >> .env
          echo PASSWORD_MAIL_SENDER=${{ secrets.PASSWORD_MAIL_SENDER }} >> .env
      - name: copy scp file to server
        uses: appleboy/scp-action@master
        with: 
          host: ${{ secrets.HOST_YC }}
          username: ${{ secrets.USER_YC }}
          key: ${{ secrets.SSH_KEY_PR }}
          passphrase: ${{ secrets.PASSPHRASE }}
          source: "docker-compose.yaml,nginx/default.conf,static,.env"
          target: "code"

      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_YC }}
          username: ${{ secrets.USER_YC }}
          key: ${{ secrets.SSH_KEY_PR }}
          passphrase: ${{ secrets.PASSPHRASE }}
          target: "code"
          script: |
            sudo apt-get update -y
            sudo apt-get remove docker docker-engine docker.io -y
            sudo apt install docker.io docker-compose -y
            sudo systemctl start docker
            sudo systemctl enable docker


      - name: start docker-compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_YC }}
          username: ${{ secrets.USER_YC }}
          key: ${{ secrets.SSH_KEY_PR }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            sudo sh -c "cd code; docker-compose down -v"
            sudo sh -c "cd code; docker-compose up -d"

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} успешно выполнен!
